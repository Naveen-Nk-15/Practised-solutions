max circular subarray sum,,,

my soln;

static int kadane(int a[],int n)
    {
        int max=0;
        int sum=0;
        for(int i=0;i<n;i++)
        {
            sum=sum+a[i];
            // System.out.println(sum);
            if(sum>max)
            {
                max=sum;
            }
            if(sum<0)
            {
                sum=0;
            }
        }
        return max;
    }
    
    static int circularSubarraySum(int a[], int n) {
        
        // Your code here
        int max=Integer.MIN_VALUE;
        int c=0;
        for(int i=0;i<n;i++)
        {
            if(max<a[i])
            {
                max=a[i];
            }
            if(a[i]<0)
            {
                c++;
            }
        }
        if(c==n)
            return max;
        int sum=0;
        
        int actual = kadane(a,n);
        for(int i=0;i<n;i++)
        {
            sum=sum+a[i];
            a[i] = -a[i];
            // System.out.println(a[i]);
        }
        int reverse = sum+kadane(a,n);
        // System.out.println(actual);
        // System.out.println(reverse);
        if(actual>reverse)
        {
            return actual;
        }
        else
        {
            return reverse;
        }
    }
    